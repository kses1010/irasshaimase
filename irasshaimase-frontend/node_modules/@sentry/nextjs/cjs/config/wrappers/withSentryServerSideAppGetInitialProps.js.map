{"version":3,"file":"withSentryServerSideAppGetInitialProps.js","sources":["../../../../src/config/wrappers/withSentryServerSideAppGetInitialProps.ts"],"sourcesContent":["import { hasTracingEnabled } from '@sentry/tracing';\nimport { dynamicSamplingContextToSentryBaggageHeader } from '@sentry/utils';\nimport App from 'next/app';\n\nimport { isBuild } from '../../utils/isBuild';\nimport { callTracedServerSideDataFetcher, getTransactionFromRequest, withErrorInstrumentation } from './wrapperUtils';\n\ntype AppGetInitialProps = typeof App['getInitialProps'];\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom app (\"_app.js\").\n *\n * @param origAppGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nexport function withSentryServerSideAppGetInitialProps(origAppGetInitialProps: AppGetInitialProps): AppGetInitialProps {\n  return async function (\n    ...appGetInitialPropsArguments: Parameters<AppGetInitialProps>\n  ): ReturnType<AppGetInitialProps> {\n    if (isBuild()) {\n      return origAppGetInitialProps(...appGetInitialPropsArguments);\n    }\n\n    const [context] = appGetInitialPropsArguments;\n    const { req, res } = context.ctx;\n\n    const errorWrappedAppGetInitialProps = withErrorInstrumentation(origAppGetInitialProps);\n\n    // Generally we can assume that `req` and `res` are always defined on the server:\n    // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n    // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n    // span with each other when there are no req or res objects, we simply do not trace them at all here.\n    if (hasTracingEnabled() && req && res) {\n      const appGetInitialProps: {\n        pageProps: {\n          _sentryTraceData?: string;\n          _sentryBaggage?: string;\n        };\n      } = await callTracedServerSideDataFetcher(errorWrappedAppGetInitialProps, appGetInitialPropsArguments, req, res, {\n        dataFetcherRouteName: '/_app',\n        requestedRouteName: context.ctx.pathname,\n        dataFetchingMethodName: 'getInitialProps',\n      });\n\n      const requestTransaction = getTransactionFromRequest(req);\n      if (requestTransaction) {\n        appGetInitialProps.pageProps._sentryTraceData = requestTransaction.toTraceparent();\n\n        const dynamicSamplingContext = requestTransaction.getDynamicSamplingContext();\n        appGetInitialProps.pageProps._sentryBaggage =\n          dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n      }\n\n      return appGetInitialProps;\n    } else {\n      return errorWrappedAppGetInitialProps(...appGetInitialPropsArguments);\n    }\n  };\n}\n"],"names":[],"mappings":";;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;"}