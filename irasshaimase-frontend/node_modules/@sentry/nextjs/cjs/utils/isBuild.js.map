{"version":3,"file":"isBuild.js","sources":["../../../src/utils/isBuild.ts"],"sourcesContent":["/**\n * Decide if the currently running process is part of the build phase or happening at runtime.\n */\nexport function isBuild(): boolean {\n  if (\n    // During build, the main process is invoked by\n    //   `node next build`\n    // and child processes are invoked as\n    //   `node <path>/node_modules/.../jest-worker/processChild.js`.\n    // The former is (obviously) easy to recognize, but the latter could happen at runtime as well. Fortunately, the main\n    // process hits this file before any of the child processes do, so we're able to set an env variable which the child\n    // processes can then check. During runtime, the main process is invoked as\n    //   `node next start`\n    // or\n    //   `node /var/runtime/index.js`,\n    // so we never drop into the `if` in the first place.\n    process.argv.includes('build') ||\n    process.env.SENTRY_BUILD_PHASE ||\n    // This is set by next, but not until partway through the build process, which is why we need the above checks. That\n    // said, in case this function isn't called until we're in a child process, it can serve as a good backup.\n    process.env.NEXT_PHASE === 'phase-production-build'\n  ) {\n    process.env.SENTRY_BUILD_PHASE = 'true';\n    return true;\n  }\n\n  return false;\n}\n"],"names":[],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}